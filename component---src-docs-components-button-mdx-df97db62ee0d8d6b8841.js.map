{"version":3,"sources":["webpack:///./src/docs/components/button.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2OAMaA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,uMACA,+BACA,sBACE,kBAAIC,WAAW,MAAK,sBAAQA,WAAW,MAAnB,MAApB,2EACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,UAApB,8FAEF,oCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,YACd,KAAQ,SAHP,wIASL,uCACA,oCACA,kCACA,oCACA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,4CADQ,gBAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,yDADQ,uBAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,uCAQ1BJ,EAAWK,gBAAiB","file":"component---src-docs-components-button-mdx-df97db62ee0d8d6b8841.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/benchmark/benchmark/packages/docs/src/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Buttons are simple controls for executing specific on-page actions and code. Buttons are most commonly used in forms, dialogs, and modals to facilitate required user actions.`}</p>\n    <h2>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` make sure the label conveys a clear purpose of the button to the user.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` use generic labels like \"Ok,\" especially in the case of an error; errors are never \"Ok.\"`}</li>\n    </ul>\n    <h2>{`Variations`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<Stack direction=\"row\">\n  <Button variant=\"primary\">Primary</Button>\n  <Button variant=\"secondary\">Secondary</Button>\n</Stack>\n`}</code></pre>\n    <h2>{`Accessibility`}</h2>\n    <h2>{`Properties`}</h2>\n    <h2>{`See Also`}</h2>\n    <h2>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material.io/components/buttons/\"\n        }}>{`Material UI`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3.org/WAI/WCAG21/Techniques/general/G80\"\n        }}>{`WCAG Submit Button`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=CZGqnp06DnI\"\n        }}>{`Just use button -- A11ycasts #05`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}