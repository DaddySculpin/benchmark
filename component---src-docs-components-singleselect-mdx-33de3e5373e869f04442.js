(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{Hl67:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return d}));var i=t("+wNj"),l=(t("ERkP"),t("ZVZ0")),a=t("tjUo"),o={},c={_frontmatter:o},s=a.a;function d(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)(s,Object.assign({},c,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h2",null,"Overview"),Object(l.b)("p",null,"The single select response type allows test takers to respond to an item by selecting from an array of options. These options can be any arbitary element such as text, images and MathML."),Object(l.b)("h2",null,"Considerations"),Object(l.b)("p",null,"Current Considerations:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Uses a light blue background color to distinguish the input (radio/checkbox) from the option content.")),Object(l.b)("h2",null,"Behaviour"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"When an eliminated option is selected it clears the eliminated state."),Object(l.b)("li",{parentName:"ul"},"When a selected option is eliminated it will no longer be selected."),Object(l.b)("li",{parentName:"ul"},"Clearing the answer clears both the selected option and eliminations.")),Object(l.b)("h2",null,"Usage"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript",metastring:"live=true",live:"true"}),'function ExampleA() {\n  const [selected, setSelected] = React.useState();\n  const [eliminated, setEliminated] = React.useState([]);\n\n  function handleClear() {\n    setSelected();\n    setEliminated([]);\n  }\n\n  function handleChange(optionId) {\n    setSelected(optionId);\n    if (eliminated.includes(optionId)) {\n      setEliminated(eliminated.filter((i) => i !== optionId));\n    }\n  }\n\n  function handleEliminate(optionId) {\n    if (eliminated.includes(optionId)) {\n      setEliminated(eliminated.filter((i) => i !== optionId));\n    } else {\n      setEliminated([...eliminated, optionId]);\n    }\n\n    if (optionId === selected) {\n      setSelected();\n    }\n  }\n\n  return (\n    <SingleSelect\n      selected={selected}\n      eliminated={eliminated}\n      onChange={handleChange}\n      onEliminate={handleEliminate}\n      onClear={handleClear}\n    >\n      <SingleSelectChoice value="a">Option A</SingleSelectChoice>\n      <SingleSelectChoice value="b">Option B</SingleSelectChoice>\n      <SingleSelectChoice value="c">Option C</SingleSelectChoice>\n    </SingleSelect>\n  );\n}\n')),Object(l.b)("h2",null,"Component Props"))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-singleselect-mdx-33de3e5373e869f04442.js.map