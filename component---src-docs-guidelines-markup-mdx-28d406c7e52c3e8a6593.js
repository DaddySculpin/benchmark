(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{h7Cj:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return i}));var a=t("+wNj"),l=(t("ERkP"),t("ZVZ0")),s=t("tjUo"),o={},c={_frontmatter:o},b=s.a;function i(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(l.b)(b,Object.assign({},c,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h2",null,"Domain Language"),Object(l.b)("p",null,"A design systems allows us to define our own Domain Specific Language (DSL). This is the common language used by developers, designers and content authors."),Object(l.b)("p",null,'When a "primary button" is used all parties know:'),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"What it looks like"),Object(l.b)("li",{parentName:"ul"},"It's intent"),Object(l.b)("li",{parentName:"ul"},"How it behaves"),Object(l.b)("li",{parentName:"ul"},"It's accessibility implications")),Object(l.b)("p",null,"The following guidelines are to keep the benchmark DSL universally accessible. The primary goal is to provide a language with as little friction as possible in conversation, code and tooling."),Object(l.b)("hr",null),Object(l.b)("h3",null,"Universal"),Object(l.b)("p",null,"Markup should be readable by someone that is non-technical."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"// BAD: What does this mean for a non-technical person?\n<TD><TD/>\n\n// GOOD: Clear intent\n<TableCell><TableCell/>\n")),Object(l.b)("hr",null),Object(l.b)("h3",null,"Clear"),Object(l.b)("p",null,"Markup should avoid ambiguity."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'// BAD: The "2" value is ambiguous.\n// It could imply a pixel/percent value.\n<Stack spacing="2"><Stack/>\n\n// GOOD: The spacing scale is clear of conflicts.\n<Stack spacing="small"><Stack/>\n')),Object(l.b)("hr",null),Object(l.b)("h3",null,"Self Describing"),Object(l.b)("p",null,"Markup should be readable by someone who is new to the system."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"// BAD: Without any context it is not clear what this does.\n<MCMS><MCMS/>\n\n// GOOD: Clearly states\n<MultipleSelect><MultipleSelect/>\n")),Object(l.b)("hr",null),Object(l.b)("h3",null,"Consistent"),Object(l.b)("p",null,"Markup should be consistent. Pick one word per concept."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"// BAD: Two props with the same effect but named differently.\n<Switch disabled />\n<TextInput isDisabled />\n\n// GOOD: Consistent naming.\n<Switch isDisabled />\n<TextInput isDisabled />\n")),Object(l.b)("hr",null),Object(l.b)("h3",null,"Sensible Defaults"),Object(l.b)("p",null,"The most common use case for a component should be usable without having to specify props."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'// BAD: The first button is a "bare" button with no styling applied.\n// The "bare" button is a rare use case and the most common use\n// case should be shown instead.\n<Button />\n\n// GOOD: The primary button is the default.\n// Bare buttons can still be accessed by specifying it in the variant.\n<Button />\n<Button variant="bare" />\n')),Object(l.b)("hr",null),Object(l.b)("h3",null,"Property Inference"),Object(l.b)("p",null,"Props should having naming conventions to help infer what type of data they accept."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'// Boolean props should be prefixed with either is, can or has.\n\n// GOOD:\n// "is" for visual variations\n<Modal isActive />\n\n// "can" for behvior variations\n<Modal canExpand />\n\n// "has" to toggle UI elements\n<Modal hasCloseButton />\n')),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'// Events should be prefixed with "on".\n\n// GOOD:\n// "on" for events\n<MultipleSelect onSelect />\n')),Object(l.b)("hr",null),Object(l.b)("h3",null,"References"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"https://www.goodreads.com/book/show/3735293-clean-code"}),"Clean Code")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"https://dlinau.wordpress.com/2016/02/22/how-to-name-props-for-react-components/"}),"How to name props for React components"))))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-guidelines-markup-mdx-28d406c7e52c3e8a6593.js.map